/********************************************************Graph***********************
 * Copyright (c) 2012 Willink Transformations and others.
 * All rights reserved.   This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v20.html
 *
 * Contributors:
 *   E.D.Willink - Initial API and implementation
 *
 * This file provides additional validation constraints for use of OCL embedded in Ecore.
 *******************************************************************************/
import swhModel : 'platform:/resource/fr.inria.diverse.swhModel/model/swhModel.ecore'

package swhModel


context Graph
def : query():Set(Origin) = origins->select(
	/*All the revision have been created since 2015*/
	originVisits->forAll(
				snapshot.branches->forAll(
					getRevision()->closure(parent)->forAll(timestamp='2015L')
					)
				)
	and
	/*The main branch contain at least 1000 revisions */
	originVisits->exists(
				snapshot.branches->exists(
					name= 'main' and
					getRevision()->closure(parent)-> size() >100
				)
		
	)
	/*The Last Revision of the main branch contain an Android Manifest 
	and
	getLastSnapshot()->exists(
				snapshot.branches->exists(
					name= 'main' and
					getRevision().tree->closure(entries).exists(name== "AndroidManfiest.xml")
					)
		
	)*/
	
)

context SnapshotBranch::getRevision(): Revision
post: result = if child->oclIsKindOf(Revision) then  child->oclAsType(Revision) else child->oclAsType(Release).revision endif
/*and
	 let lastsnapshot:Snapshot = originVisits->sortedBy(timestamp).last().snapshot in (
	 	lastsnapshot.branches->exists(
					name= 'main'				)
	 	
	 )*/

endpackage
